{"ast":null,"code":"var _jsxFileName = \"/home/hamid-user/irc-websocket/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"./socket\"; // Assure-toi que tu as bien ton fichier socket.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\"); // Message à envoyer\n  const [chat, setChat] = useState([]); // Liste des messages reçus\n  const [roomName, setRoomName] = useState(\"\"); // Room à créer ou rejoindre\n  const [isInRoom, setIsInRoom] = useState(false); // Vérifier si l'utilisateur est dans une room\n  const [userName, setUserName] = useState(\"\"); // Pseudo de l'utilisateur\n  const [isNameSet, setIsNameSet] = useState(false); // Vérifier si l'utilisateur a défini un pseudo\n\n  useEffect(() => {\n    // Écoute des messages venant du serveur\n    socket.on(\"message\", data => {\n      setChat(prevChat => [...prevChat, data]); // Ajouter le message dans le chat\n    });\n\n    // Nettoyer les écouteurs lorsque le composant est démonté\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  // Fonction pour envoyer un message et gérer les commandes\n  const sendMessage = () => {\n    if (message.trim() !== \"\") {\n      if (message.startsWith(\"/createRoom\")) {\n        const room = message.split(\" \")[1]; // Extraire le nom de la room après \"/createRoom\"\n        if (room) {\n          socket.emit(\"createRoom\", room); // Créer la room\n          setRoomName(room); // Définir le nom de la room actuelle\n          setIsInRoom(true); // L'utilisateur est dans la room\n          setChat([]); // Réinitialiser le chat\n          setMessage(\"\"); // Réinitialiser l'input\n        } else {\n          setChat(prevChat => [...prevChat, \"Erreur: veuillez spécifier un nom de room.\"]);\n        }\n      } else if (message.startsWith(\"/joinRoom\")) {\n        const room = message.split(\" \")[1]; // Extraire le nom de la room après \"/joinRoom\"\n        if (room) {\n          socket.emit(\"joinRoom\", room); // Rejoindre la room\n          setRoomName(room); // Définir le nom de la room actuelle\n          setIsInRoom(true); // L'utilisateur est dans la room\n          setChat([]); // Réinitialiser le chat\n          setMessage(\"\"); // Réinitialiser l'input\n        } else {\n          setChat(prevChat => [...prevChat, \"Erreur: veuillez spécifier une room à rejoindre.\"]);\n        }\n      } else {\n        // Si ce n'est pas une commande, envoyer le message normal avec le pseudo\n        if (roomName.trim() !== \"\") {\n          socket.emit(\"sendMessage\", {\n            room: roomName,\n            message,\n            userName\n          }); // Envoyer le message avec le pseudo\n          setMessage(\"\"); // Réinitialiser l'input après l'envoi\n        }\n      }\n    }\n  };\n\n  // Fonction pour définir le pseudo de l'utilisateur\n  const setUserNameHandler = () => {\n    if (userName.trim() !== \"\") {\n      setIsNameSet(true); // Le pseudo est défini\n    } else {\n      alert(\"Veuillez entrer un pseudo.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCAC Chat WebSocket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !isNameSet && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        placeholder: \"Choisissez un pseudo\",\n        style: {\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setUserNameHandler,\n        children: \"D\\xE9finir le pseudo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), isNameSet && !isInRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Tapez /createRoom <nom de la room> ou /joinRoom <nom de la room>\",\n        style: {\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"300px\",\n        overflowY: \"scroll\",\n        marginBottom: \"20px\"\n      },\n      children: chat.map((msg, index) => {\n        console.log(msg); // Vérifier le contenu de msg dans la console\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this), \": \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 1\n    }, this), isInRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Tapez votre message...\",\n        style: {\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MdW5ohAprdlnz0O9N1fzyL1RnCg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","socket","jsxDEV","_jsxDEV","App","_s","message","setMessage","chat","setChat","roomName","setRoomName","isInRoom","setIsInRoom","userName","setUserName","isNameSet","setIsNameSet","on","data","prevChat","off","sendMessage","trim","startsWith","room","split","emit","setUserNameHandler","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","width","marginRight","onClick","border","height","overflowY","marginBottom","map","msg","index","console","log","_c","$RefreshReg$"],"sources":["/home/hamid-user/irc-websocket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport socket from \"./socket\";  // Assure-toi que tu as bien ton fichier socket.js\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");  // Message à envoyer\n  const [chat, setChat] = useState([]);  // Liste des messages reçus\n  const [roomName, setRoomName] = useState(\"\");  // Room à créer ou rejoindre\n  const [isInRoom, setIsInRoom] = useState(false);  // Vérifier si l'utilisateur est dans une room\n  const [userName, setUserName] = useState(\"\");  // Pseudo de l'utilisateur\n  const [isNameSet, setIsNameSet] = useState(false);  // Vérifier si l'utilisateur a défini un pseudo\n\n  useEffect(() => {\n    // Écoute des messages venant du serveur\n    socket.on(\"message\", (data) => {\n      setChat((prevChat) => [...prevChat, data]);  // Ajouter le message dans le chat\n    });\n\n    // Nettoyer les écouteurs lorsque le composant est démonté\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  // Fonction pour envoyer un message et gérer les commandes\n  const sendMessage = () => {\n    if (message.trim() !== \"\") {\n      if (message.startsWith(\"/createRoom\")) {\n        const room = message.split(\" \")[1];  // Extraire le nom de la room après \"/createRoom\"\n        if (room) {\n          socket.emit(\"createRoom\", room);  // Créer la room\n          setRoomName(room);  // Définir le nom de la room actuelle\n          setIsInRoom(true);  // L'utilisateur est dans la room\n          setChat([]);  // Réinitialiser le chat\n          setMessage(\"\");  // Réinitialiser l'input\n        } else {\n          setChat((prevChat) => [...prevChat, \"Erreur: veuillez spécifier un nom de room.\"]);\n        }\n      } else if (message.startsWith(\"/joinRoom\")) {\n        const room = message.split(\" \")[1];  // Extraire le nom de la room après \"/joinRoom\"\n        if (room) {\n          socket.emit(\"joinRoom\", room);  // Rejoindre la room\n          setRoomName(room);  // Définir le nom de la room actuelle\n          setIsInRoom(true);  // L'utilisateur est dans la room\n          setChat([]);  // Réinitialiser le chat\n          setMessage(\"\");  // Réinitialiser l'input\n        } else {\n          setChat((prevChat) => [...prevChat, \"Erreur: veuillez spécifier une room à rejoindre.\"]);\n        }\n      } else {\n        // Si ce n'est pas une commande, envoyer le message normal avec le pseudo\n        if (roomName.trim() !== \"\") {\n          socket.emit(\"sendMessage\", { room: roomName, message, userName });  // Envoyer le message avec le pseudo\n          setMessage(\"\");  // Réinitialiser l'input après l'envoi\n        }\n      }\n    }\n  };\n\n  // Fonction pour définir le pseudo de l'utilisateur\n  const setUserNameHandler = () => {\n    if (userName.trim() !== \"\") {\n      setIsNameSet(true);  // Le pseudo est défini\n    } else {\n      alert(\"Veuillez entrer un pseudo.\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>💬 Chat WebSocket</h1>\n      \n      {/* Étape pour définir le pseudo */}\n      {!isNameSet && (\n        <div>\n          <input\n            type=\"text\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            placeholder=\"Choisissez un pseudo\"\n            style={{ width: \"80%\", marginRight: \"10px\" }}\n          />\n          <button onClick={setUserNameHandler}>Définir le pseudo</button>\n        </div>\n      )}\n\n      {/* Champ pour entrer le nom de la room */}\n      {isNameSet && !isInRoom && (\n        <div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Tapez /createRoom <nom de la room> ou /joinRoom <nom de la room>\"\n            style={{ width: \"80%\", marginRight: \"10px\" }}\n          />\n          <button onClick={sendMessage}>Envoyer</button>\n        </div>\n      )}\n\n<div\n  style={{\n    border: \"1px solid #ccc\",\n    padding: \"10px\",\n    height: \"300px\",\n    overflowY: \"scroll\",\n    marginBottom: \"20px\",\n  }}\n>\n  {chat.map((msg, index) => {\n    console.log(msg); // Vérifier le contenu de msg dans la console\n    return (\n      <p key={index}>\n        <strong>{msg.userName}</strong>: {msg.message}\n      </p>\n    );\n  })}\n</div>\n\n\n      {/* Input pour envoyer un message lorsque dans une room */}\n      {isInRoom && (\n        <div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Tapez votre message...\"\n            style={{ width: \"80%\", marginRight: \"10px\" }}\n          />\n          <button onClick={sendMessage}>Envoyer</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}