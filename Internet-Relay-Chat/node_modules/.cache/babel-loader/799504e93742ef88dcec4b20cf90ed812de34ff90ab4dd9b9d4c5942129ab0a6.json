{"ast":null,"code":"var _jsxFileName = \"/home/hamid-user/irc-websocket/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"./socket\"; // Assure-toi que tu as bien ton fichier socket.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\"); // Message Ã  envoyer\n  const [chat, setChat] = useState([]); // Liste des messages reÃ§us\n  const [roomName, setRoomName] = useState(\"\"); // Room Ã  crÃ©er ou rejoindre\n  const [isInRoom, setIsInRoom] = useState(false); // VÃ©rifier si l'utilisateur est dans une room\n\n  useEffect(() => {\n    // Ã‰coute des messages venant du serveur\n    socket.on(\"message\", data => {\n      setChat(prevChat => [...prevChat, data]); // Ajouter le message dans le chat\n    });\n\n    // Nettoyer les Ã©couteurs lorsque le composant est dÃ©montÃ©\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  // Fonction pour envoyer un message et gÃ©rer les commandes\n  const sendMessage = () => {\n    if (message.trim() !== \"\") {\n      if (message.startsWith(\"/createRoom\")) {\n        const room = message.split(\" \")[1]; // Extraire le nom de la room aprÃ¨s \"/createRoom\"\n        if (room) {\n          socket.emit(\"createRoom\", room); // CrÃ©er la room\n          setRoomName(room); // DÃ©finir le nom de la room actuelle\n          setIsInRoom(true); // L'utilisateur est dans la room\n          setChat([]); // RÃ©initialiser le chat\n          setMessage(\"\"); // RÃ©initialiser l'input\n        } else {\n          setChat(prevChat => [...prevChat, \"Erreur: veuillez spÃ©cifier un nom de room.\"]);\n        }\n      } else if (message.startsWith(\"/joinRoom\")) {\n        const room = message.split(\" \")[1]; // Extraire le nom de la room aprÃ¨s \"/joinRoom\"\n        if (room) {\n          socket.emit(\"joinRoom\", room); // Rejoindre la room\n          setRoomName(room); // DÃ©finir le nom de la room actuelle\n          setIsInRoom(true); // L'utilisateur est dans la room\n          setChat([]); // RÃ©initialiser le chat\n          setMessage(\"\"); // RÃ©initialiser l'input\n        } else {\n          setChat(prevChat => [...prevChat, \"Erreur: veuillez spÃ©cifier une room Ã  rejoindre.\"]);\n        }\n      } else {\n        // Si ce n'est pas une commande, envoyer le message normal\n        if (roomName.trim() !== \"\") {\n          socket.emit(\"sendMessage\", {\n            room: roomName,\n            message\n          }); // Envoyer le message dans la room\n          setMessage(\"\"); // RÃ©initialiser l'input aprÃ¨s l'envoi\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCAC Chat WebSocket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !isInRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Tapez /createRoom <nom de la room> ou /joinRoom <nom de la room>\",\n        style: {\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"300px\",\n        overflowY: \"scroll\",\n        marginBottom: \"20px\"\n      },\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isInRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Tapez votre message...\",\n        style: {\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eur6EUB+XcKvR/jAK0VV+8YCxks=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","socket","jsxDEV","_jsxDEV","App","_s","message","setMessage","chat","setChat","roomName","setRoomName","isInRoom","setIsInRoom","on","data","prevChat","off","sendMessage","trim","startsWith","room","split","emit","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","width","marginRight","onClick","border","height","overflowY","marginBottom","map","msg","index","_c","$RefreshReg$"],"sources":["/home/hamid-user/irc-websocket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport socket from \"./socket\";  // Assure-toi que tu as bien ton fichier socket.js\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");  // Message Ã  envoyer\n  const [chat, setChat] = useState([]);  // Liste des messages reÃ§us\n  const [roomName, setRoomName] = useState(\"\");  // Room Ã  crÃ©er ou rejoindre\n  const [isInRoom, setIsInRoom] = useState(false);  // VÃ©rifier si l'utilisateur est dans une room\n\n  useEffect(() => {\n    // Ã‰coute des messages venant du serveur\n    socket.on(\"message\", (data) => {\n      setChat((prevChat) => [...prevChat, data]);  // Ajouter le message dans le chat\n    });\n\n    // Nettoyer les Ã©couteurs lorsque le composant est dÃ©montÃ©\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  // Fonction pour envoyer un message et gÃ©rer les commandes\n  const sendMessage = () => {\n    if (message.trim() !== \"\") {\n      if (message.startsWith(\"/createRoom\")) {\n        const room = message.split(\" \")[1];  // Extraire le nom de la room aprÃ¨s \"/createRoom\"\n        if (room) {\n          socket.emit(\"createRoom\", room);  // CrÃ©er la room\n          setRoomName(room);  // DÃ©finir le nom de la room actuelle\n          setIsInRoom(true);  // L'utilisateur est dans la room\n          setChat([]);  // RÃ©initialiser le chat\n          setMessage(\"\");  // RÃ©initialiser l'input\n        } else {\n          setChat((prevChat) => [...prevChat, \"Erreur: veuillez spÃ©cifier un nom de room.\"]);\n        }\n      } else if (message.startsWith(\"/joinRoom\")) {\n        const room = message.split(\" \")[1];  // Extraire le nom de la room aprÃ¨s \"/joinRoom\"\n        if (room) {\n          socket.emit(\"joinRoom\", room);  // Rejoindre la room\n          setRoomName(room);  // DÃ©finir le nom de la room actuelle\n          setIsInRoom(true);  // L'utilisateur est dans la room\n          setChat([]);  // RÃ©initialiser le chat\n          setMessage(\"\");  // RÃ©initialiser l'input\n        } else {\n          setChat((prevChat) => [...prevChat, \"Erreur: veuillez spÃ©cifier une room Ã  rejoindre.\"]);\n        }\n      } else {\n        // Si ce n'est pas une commande, envoyer le message normal\n        if (roomName.trim() !== \"\") {\n          socket.emit(\"sendMessage\", { room: roomName, message });  // Envoyer le message dans la room\n          setMessage(\"\");  // RÃ©initialiser l'input aprÃ¨s l'envoi\n        }\n      }\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>ðŸ’¬ Chat WebSocket</h1>\n      \n      {/* Champ pour entrer le nom de la room */}\n      {!isInRoom && (\n        <div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Tapez /createRoom <nom de la room> ou /joinRoom <nom de la room>\"\n            style={{ width: \"80%\", marginRight: \"10px\" }}\n          />\n          <button onClick={sendMessage}>Envoyer</button>\n        </div>\n      )}\n\n      {/* Liste des messages */}\n      <div\n        style={{\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          height: \"300px\",\n          overflowY: \"scroll\",\n          marginBottom: \"20px\",\n        }}\n      >\n        {chat.map((msg, index) => (\n          <p key={index}>{msg}</p>  \n        ))}\n      </div>\n\n      {/* Input pour envoyer un message lorsque dans une room */}\n      {isInRoom && (\n        <div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Tapez votre message...\"\n            style={{ width: \"80%\", marginRight: \"10px\" }}\n          />\n          <button onClick={sendMessage}>Envoyer</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}